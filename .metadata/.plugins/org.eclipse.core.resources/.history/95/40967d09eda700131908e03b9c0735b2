package com.peter.player;

import java.util.ArrayList;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.InputProcessor;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.glutils.ShapeRenderer.ShapeType;
import com.peter.boggle.Boggle;
import com.peter.views.Play;


public class Player implements InputProcessor{
	
	private String inputBuffer;
	private ArrayList<String> words;

	public Player(){
		inputBuffer = new String();
		words = new ArrayList<String>();
	}
	
	public void draw(){
		Boggle.batch.end();
		
		Boggle.shape.begin(ShapeType.Line);
		Boggle.shape.setColor(Color.BLACK);
		Boggle.shape.rect(Gdx.graphics.getWidth()/2-210, 20, 240, 50);
		Boggle.shape.rect(Gdx.graphics.getWidth() - 200, 93, 170, Gdx.graphics.getHeight() - 115);
		Boggle.shape.end();

		Boggle.batch.begin();
		Boggle.font30.draw(Boggle.batch, inputBuffer, 100, 55);
		for(int i=0; i<words.size(); i++)
			Boggle.font25.draw(Boggle.batch, words.get(i), Gdx.graphics.getWidth() - 190, Gdx.graphics.getHeight() - i*25 - 32);
	}
	
	public ArrayList<String> getWords(){
		return words;
	}
	public void setWords(ArrayList<String> verified) {
		words = new ArrayList<String>();
		for(int i=0; !verified.isEmpty(); i++)
			words.add(verified.remove(i));
	}
	
	@Override
	public boolean keyDown(int keycode) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean keyUp(int keycode) {
		switch(keycode){
		case 132:
			Play.timer = 0;
		}
		return false;
	}

	@Override
	public boolean keyTyped(char character) {
		if(character == 8){
			if(!inputBuffer.isEmpty())
				inputBuffer = inputBuffer.substring(0, inputBuffer.length()-1);
		}
		else if(character == 13 && !inputBuffer.isEmpty()){
			words.add(inputBuffer);
			inputBuffer = new String();
		}
		else if((character >= 97 && character <= 122)){
			inputBuffer += (char)(character - 32);
		}
		else if((character >= 65 && character <= 90)){
			inputBuffer += character;
		}
		return true;
	}

	@Override
	public boolean touchDown(int screenX, int screenY, int pointer, int button) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean touchUp(int screenX, int screenY, int pointer, int button) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean touchDragged(int screenX, int screenY, int pointer) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean mouseMoved(int screenX, int screenY) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean scrolled(int amount) {
		// TODO Auto-generated method stub
		return false;
	}

}
